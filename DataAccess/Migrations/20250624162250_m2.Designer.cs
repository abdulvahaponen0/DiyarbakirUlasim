// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(YolcuDbContext))]
    [Migration("20250624162250_m2")]
    partial class m2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.GecmisBankaIslemleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bakiye")
                        .HasColumnType("int");

                    b.Property<int>("KartNumarasi")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YolcuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YolcuId");

                    b.ToTable("gecmisBankaIslemleris");
                });

            modelBuilder.Entity("Entities.HareketSaatleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("HareketSaati")
                        .HasColumnType("time");

                    b.Property<int>("HatlarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HatlarId");

                    b.ToTable("hareketSaatlers");
                });

            modelBuilder.Entity("Entities.Hatlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Guzergah")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("HareketSaatleriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("hatlars");
                });

            modelBuilder.Entity("Entities.Iletisim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YolcuId")
                        .HasColumnType("int");

                    b.Property<string>("Yorum")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("YolcuId");

                    b.ToTable("ıletisims");
                });

            modelBuilder.Entity("Entities.KayipEsya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HatAdi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IndiginizDurak")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Not")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Zaman")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("kayipEsyas");
                });

            modelBuilder.Entity("Entities.KrediKarti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GuvenlikKodu")
                        .HasColumnType("int");

                    b.Property<string>("KartNumarasi")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("KartSahibi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("SonKullanmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Tutar")
                        .HasColumnType("int");

                    b.Property<int?>("YolcuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YolcuId");

                    b.ToTable("krediKartis");
                });

            modelBuilder.Entity("Entities.Yolcu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Bakiye")
                        .HasColumnType("int");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KullanıcıKodu")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoyAd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("yolcus");
                });

            modelBuilder.Entity("Entities.YolcuKarti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Bakiye")
                        .HasColumnType("int");

                    b.Property<int?>("BekleyenBakiye")
                        .HasColumnType("int");

                    b.Property<string>("KartAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("yolcuKartis");
                });

            modelBuilder.Entity("Entities.GecmisBankaIslemleri", b =>
                {
                    b.HasOne("Entities.Yolcu", "Yolcu")
                        .WithMany("GecmisBankaIslemleris")
                        .HasForeignKey("YolcuId");

                    b.Navigation("Yolcu");
                });

            modelBuilder.Entity("Entities.HareketSaatleri", b =>
                {
                    b.HasOne("Entities.Hatlar", "Hatlar")
                        .WithMany("hareketSaatleri")
                        .HasForeignKey("HatlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hatlar");
                });

            modelBuilder.Entity("Entities.Iletisim", b =>
                {
                    b.HasOne("Entities.Yolcu", "Yolcu")
                        .WithMany("Iletisim")
                        .HasForeignKey("YolcuId");

                    b.Navigation("Yolcu");
                });

            modelBuilder.Entity("Entities.KrediKarti", b =>
                {
                    b.HasOne("Entities.Yolcu", "Yolcu")
                        .WithMany("KrediKartis")
                        .HasForeignKey("YolcuId");

                    b.Navigation("Yolcu");
                });

            modelBuilder.Entity("Entities.Hatlar", b =>
                {
                    b.Navigation("hareketSaatleri");
                });

            modelBuilder.Entity("Entities.Yolcu", b =>
                {
                    b.Navigation("GecmisBankaIslemleris");

                    b.Navigation("Iletisim");

                    b.Navigation("KrediKartis");
                });
#pragma warning restore 612, 618
        }
    }
}
